#summary pcsx2 status on linux amd64

More and more linux user have a 64bits distributions. The purpose of this wiki page is to explain the situation and the possible solutions.

* It is only a DRAFT for the moment *

However Status update on following distribution are welcome : Debian / Fedora / Gentoo / Mandriva / Opensuse / Ubuntu / Slackware. Look at TODO mark.

= Introduction =
    PCSX2 does not support 64bits for various reasons.
        * The code is architecture dependent (for performance reason). Supporting both 32bits and 64bits is too much work.
        * It would need a complete rewrite of the emulator core.
        * No gain in performance, actually it could be slower.
        * ...

     The only way to use PCSX2 on an amd64 distributions is the installation of 32bits libraries.

= PCSX2 not amd64 compatible by design =
 Most software only need a compilation to support a new architecture. It was one goal of the C language (versus assembly) : to be independent of the processor. However a class of software does not follow this rule. We call them compiler, virtual machine, dynamic recompiler, JIT compiler (and others name I forgot^^). These program directly generate architecture instruction. So the code generated depends on the targets
  * There is a static class. You generate the code first, then you execute it (2 process). The major example is GCC. Code that generate the x86 instruction is completely different of powerpc one. Each architecture have a special backend.
  * There is also the dynamic class. You generate the instruction during the execution of the program (only 1 process) and the program execute them. In others word the generator could be portable but not the instruction generated by it. GCC options can done nothings about it. Some examples are JAVA virtual machine, Javascript & flash virtual machine (never ask why your web broswer is still in 32bits), PERL virtual machine, Python virtual machine etc... And last but not least PCSX2. All these software must be rewritten for each new architecture supported x86, amd64, powerpc...

 Why use this kind of sofware. The main reason is speed. A virtual machine or a JIT compiler are globally 10 to 100 times faster than a basic interpreter of the language (I include binary code into language). But it would not be fatest to use directly architecture code (gcc compilation) instead of an interpreter ? Yes probably, but there are others reason. 
  * Sometimes is not possible (or very difficult) to port the original code (PCSX2 case).
  * You can do optimization based on run-time value which can not be done in a the compilation.
  * An others reason is portability, wait you just say that the code was not portable. That true, the virtual machine must be updated but not the code executed on the virtual machine. You did not need to port every PERL program, only the virtual machine that execute it. The virtual machine add anothers layer of abstraction. That why you can them "virtual" "machine".
   
  Note: google and wikipedia are you best friends.


= Chroot environment =
    The recommended way.

    === Standard library ===
    The best way to install the 32bits is to create a 32 bits chroot. Each distributions have a specific way.
      * Use Google ;)
      * Some link that could help
          # Ubuntu : https://help.ubuntu.com/community/DebootstrapChroot & https://help.ubuntu.com/community/32bit_and_64bit#How
          # TODO complete Others distribution : Debian / Fedora / Gentoo / Mandriva / Opensuse / Slackware


    === Proprietary Driver ===
      * NVIDIA
          * Do not know ^^    
      * ATI/AMD (note library paths depend on distributions)
          # Use the 32bits glxinfo to check that direct rendering is enabled
          # You need to overwrite the libGL.so.`*` libraries provided by mesa with the 32bits version in fglrx.
          # You must add the 32bits fglrx_dri.so

= IA32 libs =
    Some distributions adds the possibility to install lots of 32bits library in a big package. Note: it is still necessary to install the 64bits developpement packages.
       # Debian / Ubuntu: not functional, miss mutiple libraries
            * libportaudio
            * libsoundtouch
            * libglew
            * libwxbase2.8 and libwxgtk2.8
            * nvidia-cg-toolkit
       # Fedora: Status unknow
            * search package ending with ".i686"
       # Opensuse: Status unknow
            * search package ending with "-32bit"
       # TODO complete Others distribution : Gentoo / Mandriva / Slackware
      
= Multi arch support =
    There is a project on Debian / Ubuntu to allow the installation in the same time of any architecture package on any system. It would allow easy cross-compilation.

      * Debian / Ubuntu: not yet implemented. Would probably take at least one year :(
      * TODO complete Others distribution : Fedora / Gentoo / Mandriva / OpensUse /Slackware